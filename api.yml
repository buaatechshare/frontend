swagger: "2.0"

info:
  description: "the api document for BUAA techshare platform"
  version: "1.0.0"
  title: "techshare API"
  termsOfService: "http://swagger.io/terms/"
# host: "http://rap2api.taobao.org/app/mock/161835/"
basePath: "/"
schemes:
- "http"
paths:
  /comment:
    post:
      summary: post comment and rate with userID and resourceID
      description: the comment has only one level combinded with a certain resource
      parameters:
        - name: userID
          description: userID
          in: query
          required: true
          type: string
        - name: resourceID
          description: resourceID
          in: query
          required: true
          type: string
        - name: comment
          description: comment
          in: query
          required: true
          type: string
        - name: rate
          description: rate 5 maximum
          in: query
          required: true
          type: number
          format: flaot
      responses:
        200:
          description: finished
    get:
      summary: get comment with the resourceID
      description: get comment with the resourceID
      parameters:
        - name: resourceID
          description: resourceID
          in: query
          required: true
          type: string
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
      responses:
        200: 
          description: finished
          schema:
            $ref: '#/definitions/commentlist'

  /myPaper/{userID}:
    get:
      summary: 在专家资源管理界面得到专家自己的paper
      description: 在专家资源管理界面得到专家自己的paper
      parameters: 
        - $ref: '#/paremeters/userID'
      responses:
        200: 
          description: finished
          schema:
            $ref: '#/definitions/paperlist'
    #TODO how to post the resource
    post:
      summary: 提交自己的专家论文
      description: 提交自己的论文，包括信息和pdf
      parameters:
        - $ref: '#/parameters/userID'
      responses:
        200:
          description: finished
    delete:
      summary: 删除自己的论文
      description: 删除自己的论文
      parameters:
        - $ref: '#/parameters/userID'
        - name: resourceID
          in: query
          required: true
          type: string
      responses:
        200:
          description: finished
        
  /login:
    post:
      summary: login with email and password
      description: login with email and password
      parameters: 
        - name: username
          description: this parameter should be named as "username"
          in: query
          type: "string"
          format: email
        - name: password
          in: query
          type: string
          format: password
      responses:
        200: 
          description: finished
        404:
          description: not found
  /register:
    post:
      summary: register and post a new user
      parameters:
        - name: email
          in: query
          type: "string"
          format: email
        - name: userName
          in: query
          type: "string"
        - name: phoneNumber
          in: query
          type: "string"
        - name: password
          in: query
          type: string
          format: password
      responses:
        201:
          description: register successfully
        500:
          description: fail to register
  /papers:
    get:
      summary: get the default recommended papers
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: a list of papers
          schema:
            $ref: '#/definitions/paperlist'
        404:
          description: the papers has not been found
          
  /papers/{userID}:
    get:
      summary: 得到特定用户的推荐信息
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/userID'
      responses:
        200:
          description: a list of paper for a certain user
          schema:
            $ref: '#/definitions/paperlist'
    
  /patents:
    get:
      summary: 得到默认推荐专利
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: a list of patents
          schema:
            $ref: '#/definitions/patentlist'
        404:
          description: the patents have not been found
          
  /patents/{userID}:
    get:
      summary: 得到特定用户的推荐专利
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/userID'
      responses:
        200:
          description: a list of patents for a certain user
          schema:
            $ref: '#/definitions/patentlist'
  #TODO 搜索确定界面之后确定
  /search/papers:
    get:
      description: get searched result
      summary: get searched result
      parameters:
        - name: keywords
          in: query
          type: "string"
          description: the searching information and keywords
      responses:
        200:
          description: a list of papers
          schema:
            $ref: '#/definitions/paperlist'
        404:
          description: not found
  /search/patents:
    get:
      description: get searched result
      summary: get searched result
      parameters: 
       - name: keywords
         in: query
         type: "string"
         description: searching information
      responses:
        200:
          description: a list of patents
          schema:
            $ref: '#/definitions/patentlist'
        404:
          description: not found
  /search/professors:
    get:
      description: get searched professors
      summary: get searched professors
      parameters:
        - name: keywords
          in: query
          type: "string"
          description: searching information
      responses:
        200:
          description: a list of professors
          schema:
            $ref: '#/definitions/professorlist'
  /paperDetail/{resourceID}:
    get:
      description: get paper detail
      summary: get paper detail
      parameters:
        - name: resourceID
          in: path
          required: true
          type: "string"
      responses:
        200:
          description: the full details for a paper
          schema:
            properties:
              title:
                type: string
              author:
                type: string
              organization:
                type: string
              venue:
                type: string
              year:
                type: integer
              keywords:
                type: array
                items:
                  type: string
              fos:
                description: fields of study
                type: array
                items:
                  type: string
              n_citation:
                type: integer
              references:
                type: array
                items:
                  type: string
              page_start:
                type: string
              page_end:
                type: string
              doc_type:
                type: string
              publisher:
                type: string
              volume:
                type: string
              issue:
                type: string
              doi:
                type: string
              url:
                type: array
                items:
                  type: string
              abstract:
                type: string
                format: text

  /patentDetail/{resourceID}:
    get:
      description:  get patent detail
      summary: get patent detail
      parameters: 
        - name: resourceID
          description: resourceID
          in: path
          required: true
          type: string
      responses:
        200:
          description: get detail succesfully
          schema:
            properties:
              applicationNo:
                type: string
              applicationDate:
                type: string
                format: datetime
              publicNo:
                type: string
              publicDate:
                type: string
                format: datetime
              grantNo:
                type: string
              grantDate:
                type: string
                format: datetime
              title:
                type: string
              address:
                type: string
              country_province:
                type: string
              country: 
                type: string
              mainClassification:
                type: string
              agent:
                type: string
              appliers:
                type: array
                items: 
                  type: string
              obligee:
                type: string
              classificationNo:
                type: array
                items: 
                  type: string
              priority:
                type: string
              keywords:
                type: array
                items: 
                  type: string
              abstract:
                type: string
                format: text
              agency:
                type: string

  /interests:
    get:
      summary: get all interest tags from backend
      description: get all interest tags from backend
      responses:
        200:
          description: OK
          schema:
            properties:
              tags:
                type: array
                items:
                  type: string
  
  /userinfo/{userID}:
    get:
      summary: get user infomation
      description: get user infomation including email, username, email and password
      parameters: 
        - $ref: '#/parameters/userID'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/userInfo'
        404:
          description: the user not found
    patch:
      summary: update user information
      description: update all information of user
      parameters: 
        - $ref: '#/parameters/userID'
        - name: password
          in: query
          type: string
          format: password
        - name: username
          in: query
          type: string
      responses:
        200:
          description: OK
        404: 
          description: the user not found
  /collections/{userID}:
    post:
      description: 上传新的收藏
      parameters:
        - $ref: '#/parameters/userID'
        - name: resourceID
          in: query
          required: true
          type: string
      responses:
        201:
          description: post successfully
        404:
          description: the user not found
    delete:
      description: delete a collection of paper
      parameters:
      - $ref: '#/parameters/userID'
      - name: resourceID
        in: query
        required: true
        type: string
      responses:
        204:
          description: delete successfully
        404:
          description: user or resource not found
  /collections/papers/{userID}:
    get:
      description: 给定pagesize，计算出pagenumber，分页返回收藏的论文
      parameters:
        - $ref: '#/parameters/userID'    
        - $ref: '#/parameters/pageSize'
      responses:
        200: 
          description: OK
          schema: 
            $ref: '#/definitions/paperlist'
        404:
          description: the user not found
  
  /collections/patents/{userID}:
    get:
      description: 给定pagesize，计算出pagenumber，分页返回收藏的专利
      parameters:
        - $ref: '#/parameters/userID'  
        - $ref: '#/parameters/pageSize'  
      responses:
        200: 
          description: OK
          schema: 
            $ref: '#/definitions/patentlist'
        404:
          description: the user not found

  /messages:
    get:
      description: 给定receiver，返回receiver的信，同理sender，给定两个时，返回符合的信
      parameters:
        - name: receiverID
          in: query
          type: string
        - name: senderID
          in: query
          type: string
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/messagelist'
        404:
          description: user or message not found
    post:
      description: post a message 
      parameters:
        - name: receiverID
          in: query
          type: string
        - name: senderID
          in: query
          type: string
        - name: content
          in: query
          type: string
          format: text
      responses:
        201:
          description: add the new message successfully
        400:
          description: fail to add the new message
  
  /follow/{userID}:
    get:
      description: 得到follow专家列表，给定pagesize返回列表
      summary: get the proflist the user follows
      parameters:
        - $ref: '#/parameters/userID'
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/professorlist'
        400:
          description: invalid request
        404:
          description: not found
    post:
      description: post a new prof followed by the user
      summary: psot a new prof followed by the user
      parameters:
        - $ref: '#/parameters/userID'
        - name: professorID
          in: query
          required: true
          type: string
      responses:
        201: 
          description: created
        400:
          description: invalid request
        404:
          description: user not found
    delete:
      description: unfollow the professor
      summary: unfollow the professor
      parameters:
        - $ref: '#/parameters/userID'
        - name: professorID
          in: query
          required: true
          type: string
      responses:
        201:
          description: deleted
        400:
          description: invalid request
        404: 
          description: the follower or professor not found

  /application/{userID}:
    post:
      description: post the application to be professor
      parameters:
        - $ref: '#/parameters/userID'
        - name: introduction
          in: query
          required: true
          type: string
          format: text
        - name: constitution
          in: query
          required: true
          type: string
        - name: Name
          in: query
          required: true
          type: string
        #? how to deal with field
        - name: Field
          in: query
          required: true
          type: string
      responses:
        201:
          description: created
        400:
          description: invalid
        404:
          description: user not found
    get:
      description: get the application using userID
      parameters:
        - $ref: '#/parameters/userID'
      responses:
        201:
          description: get successfully
          schema:
            required:
              - datetime
              - introduction
              - constitution
              - Name
            properties:
              datetime:
                type: string
                format: datetime
              introduction:
                type: string
                format: text
              constitution:
                type: string
              Name:
                type: string
              isPass:
                type: boolean
              reason:
                type: string
                format: text
  /application:
    get:
      summary: 管理员得到所有未审核的申请
      description: 管理员得到所有未审核的申请,根据pagesize确定页数
      parameters: 
        - $ref: '#/parameters/pageSize'
      responses:
        200:
          description: OK
          schema:
            required:
              - datetime
              - introduction
              - constitution
              - Name
            properties:
              datetime:
                type: string
                format: datetime
              introduction:
                type: string
                format: text
              constitution:
                type: string
              Name:
                type: string
              isPass:
                type: boolean
              reason:
                type: string
                format: text
    
    patch:
      summary: 管理员审核专家申请
      description: 管理员审核专家申请
      parameters: 
        - name: userID
          in: query
          required: true
          type: string
        - name: isPass
          in: query
          required: true
          type: string
        - name: reason
          in: query
          required: true
          type: string
          format: text
      responses:
        200:
          description: OK

# test    
parameters:
  userID:
    name: userID
    in: path
    required: true
    type: number
  pageNumber:
    name: pageNumber
    in: query
    required: true
    type: number
  pageSize:
    name: pageSize
    required: true
    in: query
    type: number
definitions:
  userInfo:
    type: object
    properties:
      email:
        type: "string"
        format: email
      password:
        type: string
        format: password
      username:
        type: string
  paper:
    type: object
    required:
      - author
      - paperName
    properties:
      author:
        type: "string"
      authorID:
        type: "string"
        description: get the userID of professor if it exists
      paperName:
        type: "string"
      abstract:
        type: string
        format: text
      resourceID:
        type: "string"
  patent:
    type: object
    required:
      - rightHolder
      - patentName
    properties:
      rightHolder:
        type: "string"
      patentName:
        type: "string"
      summary:
        type: string
        format: text
      resourceID:
        type: "string"
  professor:
    type: object
    required:
      - name
      - field
    properties:
      name:
        type: "string"
      field:
        type: "string"
      constitution:
        type: "string"
  message:
    type: object
    required:
      - receiverName
      - senderName
      - content
    properties:
      receiverName:
        type: string
      senderName:
        type: string
      content:
        type: string
        format: text
  comment:
    type: object
    required:
      - name
      - content
    properties:
      name:
        type: string
      content:
        type: string
        format: text

  paperlist:
    type: array
    items:
      $ref: '#/definitions/paper'

  patentlist:
    type: array
    items:
      $ref: '#/definitions/patent'

  professorlist:
    type: array
    items:
      $ref: '#/definitions/professor'
  messagelist:
    type: array
    items:
      $ref: '#/definitions/message'
  commentlist:
    type: array
    items:
      $ref: '#/definitions/comment'
